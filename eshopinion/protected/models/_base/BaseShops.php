<?php

/**
 * This is the model base class for the table "Shops".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Shops".
 *
 * Columns in table "Shops" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $name
 * @property string $adress
 * @property string $url
 * @property string $phone
 * @property string $email
 * @property string $logo_url
 * @property string $username
 * @property string $password
 * @property string $token
 * @property integer $is_client
 * @property integer $url_scrap
 * @property string $createdAt
 * @property string $updatedAt
 *
 */
abstract class BaseShops extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Shops';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Shops|Shops', $n);
	}

	public static function representingColumn() {
		return 'createdAt';
	}

	public function rules() {
		return array(
			array('createdAt, updatedAt', 'required'),
			array('is_client, url_scrap', 'numerical', 'integerOnly'=>true),
			array('name, email', 'length', 'max'=>255),
			array('adress, url', 'length', 'max'=>512),
			array('phone, username, password, token', 'length', 'max'=>45),
			array('logo_url', 'length', 'max'=>1024),
			array('name, adress, url, phone, email, logo_url, username, password, token, is_client, url_scrap', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, adress, url, phone, email, logo_url, username, password, token, is_client, url_scrap, createdAt, updatedAt', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'adress' => Yii::t('app', 'Adress'),
			'url' => Yii::t('app', 'Url'),
			'phone' => Yii::t('app', 'Phone'),
			'email' => Yii::t('app', 'Email'),
			'logo_url' => Yii::t('app', 'Logo Url'),
			'username' => Yii::t('app', 'Username'),
			'password' => Yii::t('app', 'Password'),
			'token' => Yii::t('app', 'Token'),
			'is_client' => Yii::t('app', 'Is Client'),
			'url_scrap' => Yii::t('app', 'Url Scrap'),
			'createdAt' => Yii::t('app', 'Created At'),
			'updatedAt' => Yii::t('app', 'Updated At'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('adress', $this->adress, true);
		$criteria->compare('url', $this->url, true);
		$criteria->compare('phone', $this->phone, true);
		$criteria->compare('email', $this->email, true);
		$criteria->compare('logo_url', $this->logo_url, true);
		$criteria->compare('username', $this->username, true);
		$criteria->compare('password', $this->password, true);
		$criteria->compare('token', $this->token, true);
		$criteria->compare('is_client', $this->is_client);
		$criteria->compare('url_scrap', $this->url_scrap);
		$criteria->compare('createdAt', $this->createdAt, true);
		$criteria->compare('updatedAt', $this->updatedAt, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}