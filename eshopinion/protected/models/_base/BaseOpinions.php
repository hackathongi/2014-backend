<?php

/**
 * This is the model base class for the table "Opinions".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Opinions".
 *
 * Columns in table "Opinions" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $description
 * @property integer $rating
 * @property string $date
 * @property string $lang
 * @property string $createdAt
 * @property string $updatedAt
 * @property integer $OrderId
 *
 */
abstract class BaseOpinions extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Opinions';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Opinions|Opinions', $n);
	}

	public static function representingColumn() {
		return 'createdAt';
	}

	public function rules() {
		return array(
			array('createdAt, updatedAt', 'required'),
			array('rating, OrderId', 'numerical', 'integerOnly'=>true),
			array('description', 'length', 'max'=>255),
			array('lang', 'length', 'max'=>3),
			array('date', 'safe'),
			array('description, rating, date, lang, OrderId', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, description, rating, date, lang, createdAt, updatedAt, OrderId', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'description' => Yii::t('app', 'Description'),
			'rating' => Yii::t('app', 'Rating'),
			'date' => Yii::t('app', 'Date'),
			'lang' => Yii::t('app', 'Lang'),
			'createdAt' => Yii::t('app', 'Created At'),
			'updatedAt' => Yii::t('app', 'Updated At'),
			'OrderId' => Yii::t('app', 'Order'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('rating', $this->rating);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('lang', $this->lang, true);
		$criteria->compare('createdAt', $this->createdAt, true);
		$criteria->compare('updatedAt', $this->updatedAt, true);
		$criteria->compare('OrderId', $this->OrderId);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}