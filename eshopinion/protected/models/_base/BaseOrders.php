<?php

/**
 * This is the model base class for the table "Orders".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Orders".
 *
 * Columns in table "Orders" available as properties of the model,
 * and there are no model relations.
 *
 * @property integer $id
 * @property string $description
 * @property string $date
 * @property string $token
 * @property string $createdAt
 * @property string $updatedAt
 * @property integer $ClientId
 * @property integer $ShopId
 *
 */
abstract class BaseOrders extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'Orders';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Orders|Orders', $n);
	}

	public static function representingColumn() {
		return 'createdAt';
	}

	public function rules() {
		return array(
			array('createdAt, updatedAt', 'required'),
			array('ClientId, ShopId', 'numerical', 'integerOnly'=>true),
			array('description', 'length', 'max'=>1024),
			array('token', 'length', 'max'=>45),
			array('date', 'safe'),
			array('description, date, token, ClientId, ShopId', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, description, date, token, createdAt, updatedAt, ClientId, ShopId', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'description' => Yii::t('app', 'Description'),
			'date' => Yii::t('app', 'Date'),
			'token' => Yii::t('app', 'Token'),
			'createdAt' => Yii::t('app', 'Created At'),
			'updatedAt' => Yii::t('app', 'Updated At'),
			'ClientId' => Yii::t('app', 'Client'),
			'ShopId' => Yii::t('app', 'Shop'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('date', $this->date, true);
		$criteria->compare('token', $this->token, true);
		$criteria->compare('createdAt', $this->createdAt, true);
		$criteria->compare('updatedAt', $this->updatedAt, true);
		$criteria->compare('ClientId', $this->ClientId);
		$criteria->compare('ShopId', $this->ShopId);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}